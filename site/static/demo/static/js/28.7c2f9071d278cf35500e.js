webpackJsonp([28],{679:function(e,t,n){var o=n(680);"string"==typeof o&&(o=[[e.i,o,""]]),o.locals&&(e.exports=o.locals);n(522)("505a67a7",o,!0)},680:function(e,t,n){t=e.exports=n(521)(),t.push([e.i,"","",{version:3,sources:[],names:[],mappings:"",file:"introduce.vue",sourceRoot:""}])},681:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default={data:function(){return{}},watch:{},computed:{},methods:{},created:function(){},mounted:function(){},activated:function(){},components:{}}},682:function(e,t){e.exports={render:function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("Page",[n("Header",[n("Navbar",[n("Title",[e._v("介绍")])],1)],1),e._v(" "),n("Content",{attrs:{padding:""}},[n("h5",[e._v("很高兴你能找到这")]),e._v(" "),n("p",[e._v("Vimo框架用于在Hybrid平台中开发各类H5微应用，开发框架是为了更好的解决 "),n("strong",[e._v("组件、业务、平台")]),e._v(" 三者的关系. ")]),e._v(" "),n("h5",[e._v("组件")]),e._v(" "),n("p",[e._v("\n            一般在开发微应用时，都会去网上找相应的组件库或者UI库进行修改开发，但是就目前来说组件质量良莠不齐，有些组件虽然有大厂在站台，但是细读代码会发现实现丑陋。假如Vue就是一把手枪，有些人选择用它砸人，我选择扣动扳机。组件在实现上参考了IONIC和Mint两个库，并且在重复阅读源码的基础上进行组件开发，目前常用的组件已开发完毕，且已在业务中实践。")]),e._v(" "),n("h5",[e._v("业务")]),e._v(" "),n("p",[e._v("\n            因为H5微应用的页面结构特殊，且功能简单，因此使用Vue的组件化可以规范页面书写。Vimo的页面类似于三明治结构，Header用于放置在顶部呈现的内容；Content组件用于主内容的呈现，可以是滚动内容也可以是固定内容；Footer组件和Header组件类似，用于放置底部不随滚动的内容。除了特殊排版的内容，其余都可通过组件组合的形式开发，节省开发时间。")]),e._v(" "),n("h5",[e._v("平台")]),e._v(" "),n("p",[e._v("\n            由于H5的移植特性，只要App中嵌入了浏览器组件就能打开H5应用，因此制作的H5应用可在微信、支付宝、钉钉、自制WebView、各类公共平台等各类浏览器中运行，也可以根据平台展现不同的UI。也正因为如此，需要规范各个平台的原生化组件的调用，否则我们的业务中就要充斥各类平台判断的if-else代码，增加后期维护、构建大型应用的难度。")]),e._v(" "),n("h5",[e._v("最后")]),e._v(" "),n("p",[e._v("目前Vimo还在开发，debug和优化也在持续进行，如果有好的建议或者期望在业务中使用，希望能联系我。")])])],1)},staticRenderFns:[]}},935:function(e,t,n){n(679);var o=n(0)(n(681),n(682),"data-v-ae136a1e",null);e.exports=o.exports}});
//# sourceMappingURL=28.7c2f9071d278cf35500e.js.map